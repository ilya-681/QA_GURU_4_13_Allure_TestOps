plugins {
    id "java-library"
    id "application"
    id "io.qameta.allure" version "2.8.1"
}

repositories {
    maven { url = "https://dl.bintray.com/qameta/maven-unstable/" }
    mavenCentral()
}

def allureVersion = "2.17.3",
    selenideVersion = "6.3.5",
    junitVersion = "5.8.2"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}


dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.assertj:assertj-core:3.22.0",
            "org.aeonbits.owner:owner:1.0.12",
//            "io.qameta.allure:allure-ee-junit-platform:3.28.2",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties += System.properties
    useJUnitPlatform()
    System.setProperty("chromeoptions.prefs", "intl.accept_languages=en")
    systemProperty("junit.jupiter.extensions.autodetection.enabled", "true")

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

}

//test {
//    useJUnitPlatform()
//}

task negative_tests(type: Test) {
    useJUnitPlatform {
        includeTags 'negative'
    }
}